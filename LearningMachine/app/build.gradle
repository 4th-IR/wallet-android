apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.learningmachine.android.app"
        minSdkVersion 19
        targetSdkVersion 25
        versionName "1.0"
        def buildNumber = System.getenv("BUILD_NUMBER")
        if (buildNumber != null) {
            versionCode buildNumber.toInteger()
            versionNameSuffix "-" + buildNumber
        } else {
            versionCode 1
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        LearningMachineRelease {
            keyAlias System.getenv("SIGNING_KEY_ALIAS")
            keyPassword System.getenv("SIGNING_KEY_PASSWORD")
            storeFile file('../../keys/learning-machine.jks')
            storePassword System.getenv("SIGNING_STORE_PASSWORD")
        }
    }

    productFlavors {
        dev {
            applicationId "com.learningmachine.android.app.dev"
        }
        staging {
            applicationId "com.learningmachine.android.app.staging"
        }
        production {}
    }

    buildTypes {
        release {
            if (System.getenv("BUILD_NUMBER") == null) {
                versionNameSuffix "-nontravis"
            }

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def file = output.outputFile
                    output.outputFile = new File(file.parent, file.name.replace(".apk", "-" + versionName + ".apk"))
                }
            }

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.LearningMachineRelease
        }

        debug {
            if (System.getenv("BUILD_NUMBER") == null) {
                versionNameSuffix "-debug"
            }
            buildConfigField "boolean", "DEBUG_BUILD", "true"

        }
    }

    dataBinding {
        enabled = true
    }
}

retrolambda {
    jvmArgs '-noverify'
}

final SUPPORT_VERSION = '25.3.1'
final DAGGER_VERSION = '2.7'
final BITCOINJ_VERSION = '0.14.4'
final TIMBER_VERSION = '4.5.1'
final JODATIME_VERSION = '2.8.2'
final RETROFIT_VERSION = '2.1.0'
final MOCKITO_VERSION = '2.2.11'
final ROBOLECTRIC_VERSION = '3.3.2'
// Stuck at v20 until Roblectric updates
final GUAVA_VERSION = '20.0'

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:appcompat-v7:$SUPPORT_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_VERSION"
    compile "com.android.support:design:$SUPPORT_VERSION"
    compile 'com.android.support:multidex:1.0.1'
    compile "org.bitcoinj:bitcoinj-core:$BITCOINJ_VERSION"
    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    compile "com.jakewharton.timber:timber:$TIMBER_VERSION"
    compile "net.danlew:android.joda:$JODATIME_VERSION"
    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    compile "com.google.guava:guava:$GUAVA_VERSION"

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:$MOCKITO_VERSION"
    testCompile "org.robolectric:robolectric:$ROBOLECTRIC_VERSION"
    testCompile "org.robolectric:shadows-multidex:$ROBOLECTRIC_VERSION"
}
